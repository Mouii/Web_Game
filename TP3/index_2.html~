<!DOCTYPE html>
<html>
	<head>
		<meta charset="UTF-8">
		<title>Events test</title>
	<script language="javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.4.4/jquery.min.js" type="text/javascript"></script><script language="javascript" src="javascripts/jquery.hotkeys.js" type="text/javascript"></script><script language="javascript" src="javascripts/key_status.js" type="text/javascript"></script><script language="javascript" src="javascripts/util.js" type="text/javascript"></script><script language="javascript" src="javascripts/sprite.js" type="text/javascript"></script><script language="javascript" src="javascripts/sound.js" type="text/javascript"></script>
    </head>
    <body>
    </body>
<script type='text/javascript'>
	//Tutorial game html5 and javascript
	
	var CANVAS_WIDTH = 500;	 	//This variable will be use for the canvas width
	var CANVAS_HEIGHT = 300;	//This one will be for the height
	
	var image = new Image();
	image.src = "hero.png";	//Selection of the source of the image
	image.alt = "Outch";	//if there is any problem, this message will be displayed	

	var canvasElement = document.createElement("canvas");	//Creation of a canvas
	var canvas = canvasElement.getContext("2d");		//This is the context
	canvasElement.id = "canvas";				//The id of the canvas
	canvasElement.width = CANVAS_WIDTH;			//Its width
	canvasElement.height = CANVAS_HEIGHT;			//Its height
	canvasElement.setAttribute('tabindex','1');
	canvasElement.focus();
	var theCanvas = document.body.appendChild(canvasElement);
	
	var moving = 0;	//moving will be use for the cutting from the image
	
	//All the 4 following variables will be us for the cutting on the picture owning all the sprites
	var leftMove = 0;		//For the left moves
	var rightMove = 128;		//The right ones
	var upMove = 384;		//The up
	var downMove = 256;		//The down
	
	//The following variables will print the mouse position onclick
	var mouseX = 0;
	var mouseY = 0;
	
	var Xoff = false; //This variable will be use for the movement in mouse in order to move on the X first then on the Y
	
	//The player variable is an object which contains all the data about the hero we want to move
	var player = {
		x: 100,			//Its position in x
		y: 100,			//The position in y
		move : rightMove,	//The actual move status : if he's on the right, left, up or down
		draw: function() {	//The principal function which redraw the hero with all the updates
			canvas.drawImage(image, moving, this.move, 128, 128, this.x, this.y,128,128);//Function drawing the basic picture
		}
	};
	
	//This variable is needed for the animation Frame
	window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||
                              window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;
	
	//Listener added in order to execute actions depending the key pressed
	theCanvas.addEventListener("keydown", function (e) {
		var code = e.keyCode;
    		switch (code) {
       			case 37:  //Left key
				moveToLeft();
       				break;
        		case 38: //Up key
				moveToUp();
        			break; 
       			case 39: //Right key
       				moveToRight()
       				break;
        		case 40: //Down key
				moveToDown();
        			break; 
        		default: 
        			break; //Everything else
   		}
	}, false);

	//The actions about the moves are describes here
	
	function moveToLeft() {
       		if (player.move != leftMove) {
       			player.move = leftMove;
       			moving = 0;
       		}
       		player.x -= 5;
       		moving += 128;
       		moving %= 512;	
	}
	
	function moveToUp() {
	       	if (player.move != upMove) {
       			player.move = upMove;
       			moving = 0;
       		}
        	player.y -= 5;
        	moving += 128;
       		moving %= 512;
	}
	
	function moveToRight() {
       		if (player.move != rightMove) {
       			player.move = rightMove;
       			moving = 0;
       		}
       		player.x += 5;
       		moving += 128;
       		moving %= 512;		
	}

	function moveToDown() {
              	if (player.move != downMove) {
       			player.move = downMove;
       			moving = 0;
       		}
        	player.y += 5;
        	moving += 128;
       		moving %= 512;	
	}

	//Duplication of the moving function for the mouse
	
	function moveToLeftMouse() {
       		if (player.move != leftMove) {
       			player.move = leftMove;
       			moving = 0;
       		}
			player.x -= 5;
	       		moving += 128;
	       		moving %= 512;	
			if((player.x +62) > mouseX) {
				requestAnimationFrame(moveToLeftMouse);
			} else {
				Xoff = true;
			}
	}
	
	function moveToDownMouse() {
       		if (player.move != downMove) {
       			player.move = downMove;
       			moving = 0;
       		}
			player.y += 5;
	       		moving += 128;
	       		moving %= 512;	
			if((player.y + 120) < mouseY) {
				requestAnimationFrame(moveToDownMouse);
			} else {
				Xoff = false;
			}
	}
	
	function moveToRightMouse() {
       		if (player.move != rightMove) {
       			player.move = rightMove;
       			moving = 0;
       		}
			player.x += 5;
	       		moving += 128;
	       		moving %= 512;	
			if((player.x +62) < mouseX) {
				requestAnimationFrame(moveToRightMouse);
			} else {
				Xoff = true;
			}
	}
	
	function moveToUpMouse() {
       		if (player.move != upMove) {
       			player.move = upMove;
       			moving = 0;
       		}
			player.y -= 5;
	       		moving += 128;
	       		moving %= 512;	
			if((player.y + 120) > mouseY) {
				requestAnimationFrame(moveToUpMouse);
			} else {
				Xoff = false;
			}
	}

	theCanvas.addEventListener("mousedown", function (evt) {
	
		var bRect = theCanvas.getBoundingClientRect();
		mouseX = (evt.clientX - bRect.left)*(theCanvas.width/bRect.width);
		mouseY = (evt.clientY - bRect.top)*(theCanvas.height/bRect.height);
		
		if (player.x < mouseX) {
			requestAnimationFrame(moveToRightMouse);
		} else {
			requestAnimationFrame(moveToLeftMouse);
		}
		
		while(!Xoff){
			console.log("waiting");
		}
		if (player.y < mouseY) {
			requestAnimationFrame(moveToDownMouse);
		} else {
			requestAnimationFrame(moveToUpMouse);
		}
		
	}, false);


	function update() {
	}
	
	function draw() {
		canvas.clearRect (0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);
		player.draw();
		requestAnimationFrame(draw);
	}

window.addEventListener("load", function(){
  draw();
});
    </script>
